<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<context:component-scan base-package="com.itbank.service" />
   	<mybatis-spring:scan base-package="com.itbank.model"/>
      
   <bean id="multipartResolver"
      class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
      <property name="maxUploadSize" value="104857600" />   
      <property name="maxInMemorySize" value="104857600" />
      <property name="defaultEncoding" value="utf-8" />   
   </bean>  
   
   <bean id="dataSource"
         class="com.mchange.v2.c3p0.ComboPooledDataSource"
         destroy-method="close">
      <!-- 스프링 빈으로 객체를 선언하고, property 태그로 setter를 통해 값을 지정할 수 있다 -->
      <property name="driverClass" value="oracle.jdbc.driver.OracleDriver" />      
      <property name="jdbcUrl" value="jdbc:oracle:thin:@localhost:1521:xe" />      
      <property name="user" value="c##itbank" />      
      <property name="password" value="it" />      
      <property name="maxPoolSize" value="100" />      
      <property name="maxIdleTime" value="600" />      
      <property name="idleConnectionTestPeriod" value="300" />      
   </bean>
   
   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
      <property name="dataSource" ref="dataSource" />
      <property name="configLocation" value="classpath:config/mybatis.xml" />
      <property name="mapperLocations">
         <list>
            <value>classpath:config/mapper-ticketing.xml</value>
            <value>classpath:config/mapper-payment.xml</value>
         </list>
      </property>
   </bean>
   
	<!-- 트랜잭션 사용하기 위해 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- name은 DataSourceTransactionManager클래스의 변수 명이고 ref는 위의 dataSource를 
			DI하겠다는 것 -->
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager"/>  
	 
   <bean id="sqlSessionTemplate"
         class="org.mybatis.spring.SqlSessionTemplate"
         destroy-method="close">
      <constructor-arg ref="sqlSessionFactory" />
   </bean>   
		
</beans>
